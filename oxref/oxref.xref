binary by Frank B. Brokken (f.b.brokken@rug.nl)
binary V1.00.01 2012-2013

CREATED Thu, 26 Dec 2013 11:32:33 +0000
CROSS REFERENCE FOR: -fxs tmp/libmodules.a 
----------------------------------------------------------------------

author
  Full name: Icmbuild::author
  Source:    version.cc 
  Used By:
    usage.cc: usage(std::string const&)

calledFrom(unsigned int)
  Full name: XrefData::calledFrom(unsigned int)
  Source:    calledfrom.cc 
  Used By:
    undefined.cc: Store::undefined(std::string const&)

ctor()
  Full name: XrefData::ctor()
  Source:    ctor.cc 
  Used By:
    xrefdata2.cc: XrefData::XrefData(std::string const&, std::string const&, bool, std::string const&)
    xrefdata3.cc: XrefData::XrefData(std::string const&)

define(std::string const&, bool)
  Full name: Store::define(std::string const&, bool)
  Source:    define.cc 
  Used By:
    setfunction.cc: Store::setFunction(std::string const&)
    setobject.cc: Store::setObject(std::string const&)
    setsource.cc: Store::setSource(std::string const&)

defined(std::ostream&) const
  Full name: XrefData::defined(std::ostream&) const
  Source:    defined.cc 
  Used By:
    insertdefined.cc: Store::insertDefined(unsigned int, std::ostream&, std::vector<XrefData, std::allocator<XrefData> > const&)

eraseParam(unsigned int)
  Full name: XrefData::eraseParam(unsigned int)
  Source:    eraseparam.cc 
  Used By:
    keepfirst.cc: XrefData::keepFirst(unsigned int)

eraseParam(unsigned int, unsigned int)
  Full name: XrefData::eraseParam(unsigned int, unsigned int)
  Source:    eraseparam2.cc 
  Used By:
    reducelen.cc: XrefData::reduceLen(unsigned int, unsigned int)

function(std::string const&)
  Full name: Storage::function(std::string const&)
  Source:    function.cc 
  Used By:
    pushback.cc: Storage::push_back(std::string const&)

hasSymbol(std::string const&) const
  Full name: XrefData::hasSymbol(std::string const&) const
  Source:    hassymbol.cc 
  Used By:
    define.cc: Store::define(std::string const&, bool)
    undefined.cc: Store::undefined(std::string const&)

insert(std::ostream&, std::string const&, bool) const
  Full name: Store::insert(std::ostream&, std::string const&, bool) const
  Source:    insert.cc 
  Used By:
    insertinto.cc: Store::insertInto(std::ostream&) const

insertDefined(unsigned int, std::ostream&, std::vector<XrefData, std::allocator<XrefData> > const&)
  Full name: Store::insertDefined(unsigned int, std::ostream&, std::vector<XrefData, std::allocator<XrefData> > const&)
  Source:    insertdefined.cc 
  Used By:
    insert.cc: Store::insert(std::ostream&, std::string const&, bool) const
    insertinto.cc: Store::insertInto(std::ostream&) const

isDefined(std::string const&) const
  Full name: XrefData::isDefined(std::string const&) const
  Source:    isdefined.cc 
  Used By:
    define.cc: Store::define(std::string const&, bool)

keepFirst(unsigned int)
  Full name: XrefData::keepFirst(unsigned int)
  Source:    keepfirst.cc 
  Used By:
    setcooked.cc: XrefData::setCooked()

object(std::string const&)
  Full name: Storage::object(std::string const&)
  Source:    object.cc 
  Used By:
    pushback.cc: Storage::push_back(std::string const&)

objFile(std::string const&)
  Full name: Storage::objFile(std::string const&)
  Source:    objfile.cc 
  Used By:
    pushback.cc: Storage::push_back(std::string const&)

operator++()
  Full name: ObjDump::const_iterator::operator++()
  Source:    prefixinc.cc 
  Used By:
    constiterator1.cc: ObjDump::const_iterator::const_iterator(FBB::Process*, bool)

reduceLen(unsigned int, unsigned int)
  Full name: XrefData::reduceLen(unsigned int, unsigned int)
  Source:    reducelen.cc 
  Used By:
    setcooked.cc: XrefData::setCooked()

reduceToCount(unsigned int, unsigned int)
  Full name: XrefData::reduceToCount(unsigned int, unsigned int)
  Source:    reducetocount.cc 
  Used By:
    setcooked.cc: XrefData::setCooked()

s_abs
  Full name: Storage::s_abs
  Source:    data.cc 
  Used By:
    pushback.cc: Storage::push_back(std::string const&)

s_g_F
  Full name: Storage::s_g_F
  Source:    data.cc 
  Used By:
    pushback.cc: Storage::push_back(std::string const&)

s_g_O
  Full name: Storage::s_g_O
  Source:    data.cc 
  Used By:
    pushback.cc: Storage::push_back(std::string const&)

s_objFile
  Full name: Storage::s_objFile
  Source:    data.cc 
  Used By:
    pushback.cc: Storage::push_back(std::string const&)

s_reject
  Full name: Storage::s_reject
  Source:    data.cc 
  Used By:
    pushback.cc: Storage::push_back(std::string const&)

s_UND
  Full name: Storage::s_UND
  Source:    data.cc 
  Used By:
    pushback.cc: Storage::push_back(std::string const&)

setCooked()
  Full name: XrefData::setCooked()
  Source:    setcooked.cc 
  Used By:
    ctor.cc: XrefData::ctor()

setFunction(std::string const&)
  Full name: Store::setFunction(std::string const&)
  Source:    setfunction.cc 
  Used By:
    function.cc: Storage::function(std::string const&)

setLocation(std::string const&, std::string const&)
  Full name: XrefData::setLocation(std::string const&, std::string const&)
  Source:    setlocation.cc 
  Used By:
    define.cc: Store::define(std::string const&, bool)

setObject(std::string const&)
  Full name: Store::setObject(std::string const&)
  Source:    setobject.cc 
  Used By:
    object.cc: Storage::object(std::string const&)

setObjfile(std::string const&)
  Full name: Store::setObjfile(std::string const&)
  Source:    setobjfile.cc 
  Used By:
    objfile.cc: Storage::objFile(std::string const&)

setSource(std::string const&)
  Full name: Store::setSource(std::string const&)
  Source:    setsource.cc 
  Used By:
    sourcefile.cc: Storage::sourceFile(std::string const&)

skipTemplate(unsigned int) const
  Full name: XrefData::skipTemplate(unsigned int) const
  Source:    skiptemplate.cc 
  Used By:
    eraseparam.cc: XrefData::eraseParam(unsigned int)
    eraseparam2.cc: XrefData::eraseParam(unsigned int, unsigned int)
    reducetocount.cc: XrefData::reduceToCount(unsigned int, unsigned int)

sourceFile(std::string const&)
  Full name: Storage::sourceFile(std::string const&)
  Source:    sourcefile.cc 
  Used By:
    pushback.cc: Storage::push_back(std::string const&)

Store()
  Full name: Store::Store()
  Source:    store1.cc 
  Used By:
    storage1.cc: Storage::Storage()

undefined(std::string const&)
  Full name: Store::undefined(std::string const&)
  Source:    undefined.cc 
  Used By:
    undefined.cc: Storage::undefined(std::string const&)

undefined(std::string const&)
  Full name: Storage::undefined(std::string const&)
  Source:    undefined.cc 
  Used By:
    pushback.cc: Storage::push_back(std::string const&)

usedBy(unsigned int, std::ostream&, std::vector<XrefData, std::allocator<XrefData> > const&)
  Full name: Store::usedBy(unsigned int, std::ostream&, std::vector<XrefData, std::allocator<XrefData> > const&)
  Source:    usedby.cc 
  Used By:
    insertdefined.cc: Store::insertDefined(unsigned int, std::ostream&, std::vector<XrefData, std::allocator<XrefData> > const&)

version
  Full name: Icmbuild::version
  Source:    version.cc 
  Used By:
    usage.cc: usage(std::string const&)

XrefData(std::string const&)
  Full name: XrefData::XrefData(std::string const&)
  Source:    xrefdata3.cc 
  Used By:
    undefined.cc: Store::undefined(std::string const&)

XrefData(std::string const&, std::string const&, bool, std::string const&)
  Full name: XrefData::XrefData(std::string const&, std::string const&, bool, std::string const&)
  Source:    xrefdata2.cc 
  Used By:
    define.cc: Store::define(std::string const&, bool)

years
  Full name: Icmbuild::years
  Source:    version.cc 
  Used By:
    usage.cc: usage(std::string const&)


